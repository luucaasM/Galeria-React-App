{"version":3,"sources":["components/Card.jsx","components/FormImg.jsx","components/Loading.jsx","components/Cards.jsx","components/hooks/useFetchImages.js","components/Container.jsx","components/Header.jsx","components/Footer.jsx","App.jsx","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Card","img","className","src","alt","FormImg","handleSubmit","onSubmit","viewBox","xmlns","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","placeholder","type","name","Loading","class","stroke-linecap","stroke-linejoin","stroke-width","Cards","useState","images","setImages","input","setInput","loading","setLoading","peticion","useCallback","a","route","key","encodeURI","fetch","res","json","data","results","console","log","useEffect","e","preventDefault","text","target","value","useFetchImages","map","urls","regular","id","Container","Header","Footer","Date","getFullYear","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.61a8d507.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Card = ({img}) => {\r\n    return (\r\n        <div className=\r\n        \" max-w-sm rounded overflow-hidden shadow-lg\">\r\n            \r\n            <img\r\n            className=\"object-cover h-44 w-96\"\r\n            src={img}\r\n            alt=\"imagen\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nCard.propTypes = {\r\n    img: PropTypes.string\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst FormImg = ({handleSubmit}) => {\r\n    return (\r\n        <div className=\"form-container\">\r\n        <form onSubmit={handleSubmit}>\r\n          <label className=\"relative block w-80 mb-5\">\r\n            <span className=\"sr-only\">Search</span>\r\n            <span className=\"absolute inset-y-0 left-0 flex items-center pl-2\">\r\n              <svg className=\"h-5 w-5 fill-gray-300\" viewBox=\"0 0 20 20\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  className=\"h-6 w-6\"\r\n                  fill=\"none\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  stroke=\"currentColor\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={1}\r\n                    d=\"M8 16l2.879-2.879m0 0a3 3 0 104.243-4.242 3 3 0 00-4.243 4.242zM21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                  />\r\n                </svg>\r\n              </svg>\r\n            </span>\r\n            <input\r\n              className=\"placeholder:italic placeholder:text-gray-400 block w-full border border-gray-300 rounded-md py-2 pl-9 pr-3 shadow-sm focus:outline-none focus:border-sky-500 focus:ring-sky-500 focus:ring-1 sm:text-sm\"\r\n              placeholder=\"Busque la imagen que desea...\"\r\n              type=\"text\"\r\n              name=\"search\"\r\n            />\r\n          </label>\r\n        </form>\r\n      </div>\r\n    )\r\n}\r\n\r\nFormImg.propTypes = {\r\n    handleSubmit: PropTypes.func\r\n}\r\n\r\nexport default FormImg\r\n","import React from 'react'\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className='w-full h-full flex items-center justify-center z-30 '>\r\n        <svg className=\"animate-spin h-5 w-5 mr-3 text-center\" viewBox=\"0 0 24 24\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\r\n            </svg>\r\n        </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","\r\nimport Card from \"./Card\";\r\nimport FormImg from \"./FormImg\";\r\nimport { useFetchImages } from \"./hooks/useFetchImages\";\r\nimport Loading from \"./Loading\"\r\n\r\nconst Cards = () => {\r\n  const [images, loading, handleSubmit] = useFetchImages();\r\n  return (\r\n    <>\r\n      <FormImg handleSubmit={handleSubmit} />\r\n\r\n      {loading && <Loading />}\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-2 mb-2 \">\r\n      {images.map((img) => {\r\n        return <Card key={img.id} img={img.urls.regular} />;\r\n      })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import { useCallback, useEffect, useState } from \"react\";\r\n\r\nexport const useFetchImages = () => {\r\n    const [images, setImages] = useState([]);\r\n    const [input, setInput] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n  \r\n    const peticion = useCallback( async () => {\r\n  \r\n      const key = \"client_id=g-7ekDLvLpm3h7uZWjH0ibhynNkRTQYSlIYIZXpxVSw\";\r\n      let route = `https://api.unsplash.com/search/photos/?${key}`;\r\n  \r\n      if(input !== \"\"){\r\n        route = `https://api.unsplash.com/search/photos/?query=${encodeURI(input)}&${key}`;\r\n      }\r\n      setLoading(true);\r\n      const res = await fetch(route);\r\n      const data = await res.json();\r\n  \r\n      if (data.results) {\r\n        setImages(data.results);\r\n      } else {\r\n        console.log(`Error -> ${data}`);\r\n      }\r\n      setLoading(false);\r\n  \r\n    }, [input]);\r\n  \r\n  \r\n    useEffect(() => {\r\n      peticion();\r\n    }, [input, peticion]);\r\n  \r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      const text = e.target[0].value;\r\n      setInput(text);\r\n    };\r\n    return [images, loading, handleSubmit];\r\n    \r\n}\r\n","import React from \"react\";\r\nimport Cards from \"./Cards\";\r\n\r\nconst Container = () => {\r\n  return (\r\n    <div className=\"md:container md:mx-auto px-5 mt-6\">\r\n      <Cards/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Container;\r\n","import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className='bg-blue-400 '>\r\n            <br />\r\n            <h1 className='text-4xl font-semibold text-center text-white '>Gallery App con React</h1>\r\n            <br />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className='bg-gray-700 absolute bottom-0 w-full'>\r\n            <br />\r\n            <p className='text-ms text-center text-white '>  &copy; 14/12 {new Date().getFullYear()}{\" \"}</p>\r\n            <br />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react';\nimport './App.css';\nimport Container from './components/Container';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <hr />\n      <Container/>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}